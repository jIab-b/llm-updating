


OPENAI_KEY="your key here"


def self_update():
    from openai import OpenAI
    import openai, inspect, textwrap, types, os, sys

    print_msg = "l;akdsfjkl;"
    print(print_msg)

  
    prompt = "Rewrite the function so it prints print_msg is changed to a random word generated by the llm"
    
    client = OpenAI(api_key=OPENAI_KEY)
    completion = client.chat.completions.create(
        model="gpt-4.1-nano",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.1,
    )
    new_body = "\n".join(completion.choices[0].message.content.strip().splitlines()[1:-1])

    # Build complete source text for the function object
    func_name = self_update.__name__
    header = f"def {func_name}():\n"
    indented = textwrap.indent(new_body, "    ")
    new_src = header + indented + "\n"

    # Compile it and graft it onto the old function object
    code = compile(new_src, filename="<ai>", mode="exec")
    ns: dict[str, object] = {}
    exec(code, self_update.__globals__, ns)
    self_update.__code__ = ns[func_name].__code__   # hot-swap


self_update()
self_update()